include ../input/input
include ../button/button


mixin dropdown(options)
  include ./dropdown-data

  if !options
    - options = {}

  - let classes = []

  if options.isGuestsDropdown
    - attributes.type = "text"
    - attributes.placeholder = "Сколько гостей"

  if options.isComfortDropdown
    - attributes.type = "text"
    - options.isDropdownSelect = true
    - options.list = locals.comfortList
    - classes.push("dropdown--comfort")

  if options.isDateDropdown
    - options.isDateMask = true
    - options.isDatepicker = true
    - classes.push("dropdown--date")

  if options.isFilterDateDropdown
    - options.isDatepickerFilter = true
    - classes.push("dropdown--filter-date")


  .dropdown(class=classes)
    if options.label
      label.dropdown__label(for=options.id)= options.label
    - attributes.class = "dropdown__input"
    +input(options)&attributes(attributes)
    if options.isDropdownSelect
      +dropdownSelect(options.list)


mixin dropdownSelect(list)
  .dropdown__select.js-select
    ul.dropdown__list
      for item in list
        +dropdownItem(item)
    .dropdown__nav
      +button({
        buttonMod: "text",
        type: "button",
        desc: "Очистить"
        })
      +button({
        buttonMod: "text",
        type: "button",
        desc: "Применить"
        })

mixin dropdownItem(item)
  li.dropdown__item
    span.dropdown__option= item.option
    .dropdown__number
      button.dropdown__number-button.dropdown__number-button--minus(type="button")
      +input()(
        class = "dropdown__number-input"
        type = "number"
        disabled = true
        maxlength = 2
        value = item.defaultVal
        )
      button.dropdown__number-button.dropdown__number-button--plus(type="button")
