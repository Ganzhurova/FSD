include ../input/input
include ../button/button

mixin dropdown(options)
  include ./dropdown-data

  if !options
    - options = {}

  if !options.attributes
    - options.attributes = {}

  - let classes = []

  - options.attributes.class = ["dropdown__input", "js-dropdown__input"]
  - options.attributes.type = "text"

  if options.isGuestsDropdown
    - options.attributes.placeholder = "Сколько гостей"
    - options.list = locals.guestsList
    - options.addButtons = true
    - classes.push("dropdown--guests")

  if options.isComfortDropdown
    - options.list = locals.comfortList
    - classes.push("dropdown--comfort")

  .js-dropdown.dropdown.dropdown--hidden(class=classes, data-show = options.dataShow)
    +input(options)
    .dropdown__select
      ul.dropdown__list
        for item in options.list
          +dropdownItem(item)

      if options.addButtons
        .dropdown__buttons
          +button({
            mix: "dropdown__button",
            buttonMod: "text",
            type: "button",
            desc: "Очистить",
            dataAction: "clear",
            })
          +button({
            mix: "dropdown__button",
            buttonMod: "text",
            type: "button",
            desc: "Применить",
            dataAction: "apply",
            })

mixin dropdownItem(item)
  li.dropdown__item.js-dropdown__item(data-option=item.dataOption)
    span.dropdown__option= item.option

    .dropdown__number.js-dropdown__number
      button.dropdown__number-button(type="button", data-action="minus")
      input.dropdown__total.js-dropdown__total(
        type = "number"
        disabled = true
        value = item.defaultVal
        )
      button.dropdown__number-button(type="button", data-action="plus")
